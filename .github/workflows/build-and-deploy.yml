name: Deploy S3 CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v2

      - name: Cache Cargo ðŸ“¦
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install rustfmt, clippy
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          components: rustfmt, clippy
          override: true

      - name: rustup target add wasm32-unknown-unknown
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
          profile: minimal

      - name: Install trunk ðŸ§³
        uses: jetli/trunk-action@v0.1.0
        with:
          version: "latest"

      - name: Install wasm-bindgen
        uses: jetli/wasm-bindgen-action@v0.1.0
        with:
          version: "latest"

      - name: cargo fmt --all -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy

      - name: cargo test --release --all-features
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all-features

      - name: Build Web App
        run: |
          trunk build --release

      - uses: actions/upload-artifact@v2
        with:
          name: webapp_artifact
          path: |
            dist
      - uses: actions/upload-artifact@v2
        with:
          name: Artifact
          path: dist

  deployToS3:
    needs: [build-and-deploy]
    name: Deploy to S3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download WebGL Artifact
        uses: actions/download-artifact@v2
        with:
          name: Artifact
          path: dist

      # Load credential for deploy
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Copy files to the test website with the AWS CLI
        run: |
          aws s3 sync ./dist ${{ secrets.HOSTING_S3_BUCKET_URI }}
